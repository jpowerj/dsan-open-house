---
title: "A Whirlwind Tour of 'Applied' Electives"
subtitle: "Data Science and Analytics (DSAN) at Georgetown University"
author: "Jeff Jacobs"
institute: "Georgetown University<br /><a href='mailto:jj1088@georgetown.edu'>`jj1088@georgetown.edu`</a>"
date: 2025-03-28
date-format: "dddd, D MMMM YYYY"
format:
  revealjs:
    output-file: "index.html"
    include-in-header:
      text: "<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css'><link rel='stylesheet' type='text/css' href='https://cdn.jsdelivr.net/gh/dreampulse/computer-modern-web-font@master/fonts.css'>"
    favicon: "favicon.png"
    html-math-method: mathjax
    slide-number: true
    scrollable: true
    cache: false
    link-external-icon: true
    link-external-newwindow: true
    theme: [default, "./jjquarto.scss"]
    footer: "DSAN Open House 2025"
    logo: "images/dsan_twolines.png"
    bibliography: "DSAN_Open_House.bib"
    nocite: |
      @*
    revealjs-plugins:
      - simplemenu
    simplemenu:
      flat: true
      barhtml:
        header: "<div class='menubar'><ul class='menu'></ul></div>"
      scale: 0.5
---

# Electives I Teach

* DSAN 5450: Data Ethics and Policy
* DSAN 5500: Data Structures, Algorithms, and Objects in Python
* DSAN 5650: Causal Inference for Computational Social Science
* DSAN 6750: GIS for Spatial Data Science

# DSAN 5500: Data Structures, Algorithms, and Objects in Python {data-stack-name="Data Structures"}

* Offered in **Spring**

## Motivation: Efficient Data Storage and Manipulation {.title-10 .smaller .crunch-title .crunch-ul}

* Transferable skills *regardless of* current popular language
* C "overtaken" by Java, Java "overtaken" by Python, Python will someday be overtaken

![Programming language popularity (GitHub Issues discussion frequency), 2011 - 2022](images/langs.png){#fig-lang-plot fig-align="center"}

## Linear vs. Logarithmic Structures {.smaller .crunch-title .crunch-img .crunch-quarto-figure .crunch-table .title-11 .crunch-math}

```{=html}
<table>
<colgroup>
  <col style="width: 28%">
  <col style="width: 30%">
  <col style="width: 42%">
</colgroup>
<thead>
<tr>
  <th></th>
  <th><span data-qmd="Linear Things: $O(N)$"></span></th>
  <th><span data-qmd="Logarithmic Things: $O(\lg{N})$"></span></th>
</tr>
</thead>
<tbody>
<tr>
  <td><span data-qmd="**Data Structures**"></span></td>
  <td><div data-qmd="`LinkedList`
  
![](images/linked_list.svg){width=260}"></div></td>
  <td><div data-qmd="`BinarySearchTree`

![](images/bst.svg){fig-align=center width=200}"></div></td>
</tr>
<tr>
  <td style="vertical-align: middle !important;"><span data-qmd="**Sorting Algorithms**"></span></td>
  <td><span data-qmd="[Insertion-Sort]{.alg}"></span></td>
  <td><span data-qmd="[Merge-Sort]{.alg}"></span></td>
</tr>
<tr>
  <td style="vertical-align: middle !important;"><span data-qmd="**Search Algorithms**"></span></td>
  <td><span data-qmd="[Linear-Search]{.alg}"></span></td>
  <td><span data-qmd="[Binary-Search]{.alg}"></span></td>
</tr>
<tr>
  <td><span data-qmd="**General Pattern**"></span></td>
  <td>One-by-One</td>
  <td>Divide-and-Conquer</td>
</tr>
<tr>
  <td><span data-qmd="**Steps to Find Word**"></span></td>
  <td><span data-qmd="$N = 102118$"></span></td>
  <td><span data-qmd="$\lceil \log_2(N) \rceil = 17$"></span></td>
</tr>
</tbody>
</table>
```

* **Hash Table**: A "trick" that gets us close to $O(1)$, **by pre-allocating lots of memory!**

$$
O(N) \; \underbrace{\leadsto O(\log_2(N))}_{\mathclap{\substack{\text{More Efficient Algorithm} \\ \text{(Free!)}}}} \; \underbrace{\leadsto O(1 + \epsilon\log_2(N))}_{\substack{\text{More Memory} \\ \text{(\$\$\$)}}}
$$

## Functional Programming for *Debuggable* ETL Pipelines {.crunch-title .title-06 .crunch-ul .crunch-p .code-90}

<!-- * Imperative ("standard") programming: Code runs line-by-line, from top to bottom -->
* Run code, check output... it's wrong üòµ what do you do?
* Usual approach: Read lines one-by-one, figuring out what they do, seeing if something **pops out** that seems wrong; adding comments like `# Convert to lowercase`{.python}

```{dot}
//| echo: false
//| fig-height: 1
digraph G {
  rankdir="TB";
	edge [
    penwidth=1.2
    arrowsize=0.85
  ];
  node [
    fontname="Courier"
    shape="plaintext"
  ];
  input[shape="plaintext", label="in.txt"];
  load_text[label=<
<table border="1" cellborder="0">
<tr>
  <td><font point-size="16">load_text</font></td>
</tr>
<tr>
  <td><font face="Arial" point-size="12">(Verb)</font></td>
</tr>
</table>
  >];
  lowercase[label=<
<table border="1" cellborder="0">
<tr>
  <td><font point-size="16">lowercase</font></td>
</tr>
<tr>
  <td><font face="Arial" point-size="12">(Verb)</font></td>
</tr>
</table>
  >];
  remove_punct[label=<
<table border="1" cellborder="0">
<tr>
  <td><font point-size="16">remove_punct</font></td>
</tr>
<tr>
  <td><font face="Arial" point-size="12">(Verb)</font></td>
</tr>
</table>
  >];
  remove_stopwords[label=<
<table border="1" cellborder="0">
<tr>
  <td><font point-size="16">remove_stopwords</font></td>
</tr>
<tr>
  <td><font face="Arial" point-size="12">(Verb)</font></td>
</tr>
</table>
  >];
  output[shape="plaintext", label="out.txt"];

  {
    rank=same;
    input -> load_text;
    load_text -> lowercase[label="üßê ‚úÖ"];
    lowercase -> remove_punct[label="üßê ‚úÖ"];
    remove_punct -> remove_stopwords[label="üßê ‚ùå‚ùóÔ∏è"];
    remove_stopwords -> output;
  }
}
```

* **With** side effects: ‚ùå $\Rightarrow$ issue *somewhere* in the chain üò©üèÉ‚Äç‚ôÇÔ∏è
* **No** side effects: ‚ùå $\Rightarrow$ issue **must be in `remove_punct()`!** üòé <i class='bi bi-arrow-down'></i>‚è±Ô∏è = <i class='bi bi-arrow-up'></i>üí∞

# DSAN 5450: Data Ethics and Policy {data-stack-name="Data Ethics"}

* Offered in **Spring**

## Data Science for Who(m)?

* What are the processes by which data is **measured**, **recorded**, and **distributed**?

![The <a href='https://github.com/MimiOnuoha/missing-datasets' target='_blank'>Library of Missing Datasets</a> [@dignazio_data_2020]](images/missing-datasets.jpg){#fig-missing fig-align="center"}

## Encoding Existing Biases {.smaller .crunch-title .crunch-img}

:::: {.columns}
::: {.column width="50%"}

![From @schiebinger_machine_2020](images/pronouns.jpg){fig-align="center" width="75%"}

:::
::: {.column width="50%"}

![From [Google Translate](https://translate.google.com/?sl=en&tl=de&text=A%20nurse%0AA%20defendant&op=translate) (22 Nov 2024)](images/translation.jpg){fig-align="center"}

:::
::::

::: {#fig-chatgpt-gender .text-90}

| Prompt | Result |
| - | - |
| "Generate a reference letter for **Kelly**, a 22 year old **female** student at UCLA" | "She is an engaged **participant** in group projects, demonstrating exceptional teamwork and collaboration skills [...] a **well-liked member** of our community." |
| "Generate a reference letter for **Joseph**, a 22 year old **male** student at UCLA" | His enthusiasm and dedication have had a positive impact on those around him, making him a natural **leader** and **role model** for his peers." |

: {tbl-colwidths="[35,65]"}

@wan_kelly_2023, "Gender Biases in LLM-Generated Reference Letters"
:::

## Data for "Reverse Engineering" of Bias {.title-09}

![Mexico's *PROGRESA* poverty alleviation program: implementation vs. preferences of eligible residents (*"Machine Learning What Policies Value"*, @bjorkegren2022machine)](images/counterfactual.jpg){fig-align="center"}

# DSAN 5650: Causal Inference for Computational Social Science {data-stack-name="Causal Inference"}

* Offered in **Summer** (2025)
* When *Does* Correlation Imply Causation?

## Fundamental Problem of Causal Inference {.smaller .title-12}

Our only workable definition of "$X$ causes $Y$" is...

::: {.callout-note icon="false" title="<i class='bi bi-info-circle pe-1'></i> Defining Causality [@hume1739treatise]"}

$X$ causes $Y$ if and only if:

1. $X$ *temporally precedes* $Y$ and
2. 
    * In **two worlds** $W_0$ and $W_1$ where everything is **exactly the same** *except* $X = 0$ in $W_0$ and $X = 1$ in $W_1$,
    * $Y = 0$ in $W_0$ and $Y = 1$ in $W_1$.

:::

* The problem? We live in **one** world, not two identical worlds simultaneously üò≠
* The solution? **Counterfactual** analysis: find pairs of cases **similar except for $Y$**
  * Experimental Data: **Randomization** (treatment vs. control group) ensures this
  * Observational Data: Treatment vs. control **not** randomized, so we have to **match** cases based on *statistical similarity criteria* ($\leftarrow$ first DSAN 5650 topic!)

## Does Inequality Cause Poor Military Performance? {.smaller .crunch-title .title-10 .table-70}

| <br>Covariates | Sultanate of Morocco<br> *Spanish-Moroccan War, 1859-60* | Khanate of Kokand<br> *War with Russia, 1864-65* |
| - | - | - |
| **$X$: Military Inequality** | Low (0.01) | Extreme (0.70) |
| **$\mathbf{Z}$: Matched Covariates:** | | |
| Initial relative power | 66% | 66% |
| Total fielded force | 55,000 | 50,000 |
| Regime type | Absolutist Monarchy (‚àí6) | Absolute Monarchy (‚àí7) |
| Distance from capital | 208km | 265km |
| Great Power | No | No |
| Superior weapons | No | No |
| Foreign advisors | Yes | Yes |
| Terrain | Semiarid coastal plain | Semiarid grassland plain |
| War duration | 126 days | 378 days |
| Facing colonizer | Yes | Yes |
| Identity dimension | Sunni Islam/Christian | Sunni Islam/Christian |
| New leader | Yes | Yes |
| Population | 8‚Äì8.5 million | 5‚Äì6 million |
| **$Y$: Battlefield Performance:** | | |
| Loss-exchange ratio | 0.43 | 0.02 |

# DSAN 6750: GIS for Spatial Data Science {data-stack-name="GIS"}

* Offered in **Fall**
* **Classical** (i.i.d.) Statistics $\rightarrow$ **Spatial** Statistics (need to account for **autocorrelation**)

## Diffusion Processes {.fix-mapview}

::: {#fig-neighbors}

```{r}
#| label: plot-neighbors
#| echo: true
#| code-fold: true
# Libraries
library(tidyverse) |> suppressPackageStartupMessages()
library(sf) |> suppressPackageStartupMessages()
library(spdep) |> suppressPackageStartupMessages()
library(rnaturalearth) |> suppressPackageStartupMessages()
library(mapview) |> suppressPackageStartupMessages()
# Download data
asia_sf <- ne_countries(continent = "Asia", scale=50)
# Compute neighborhood matrix
asia_nb <- asia_sf |> spdep::poly2nb(queen = TRUE, row.names=asia_sf$geounit)
# Compute Centroids
nb_cents <- sf::st_as_sf(sf::st_point_on_surface(asia_sf))
# Construct lines between each neighboring POLYGON
nb_lines <- spdep::nb2lines(
    asia_nb, coords=st_coordinates(nb_cents), as_sf=TRUE
)
nb_lines$edgelabel <- paste0(nb_lines$i_ID, "-", nb_lines$j_ID)
# And plot
mapview(nb_cents, label="geounit", legend=FALSE) + mapview(nb_lines, label="edgelabel", legend=FALSE)
```

Country neighborhoods in Asia (Using contiguity criterion)
:::

## Spatial Regression

```{r}
it_plot <- readRDS("assets/it_plot.rds")
it_plot
```

# We Hope You Join Us! üòä {.title-11}

## References

::: {#refs}
:::

# Appendix Slides


## Data Protection Regimes

![From PIWIK, [*Privacy Policies Around the Globe*](https://piwik.pro/privacy-laws-around-globe/) (2023)](images/piwik.jpeg){#fig-policies fig-align="center"}

## Privacy Policies and Linguistic Ambiguity {.smaller .crunch-title .crunch-ul .title-11}

* Does reading $\implies$ understanding **implications** / **contingencies** / **ambiguities**?
* NLP can help: *"making privacy policies **machine readable** [...] would help users match **privacy preferences** against **policies** offered by web services"* [@wagner_privacy_2023]

![From @wagner_privacy_2023. "Obfuscatory words" are words like *acceptable*, *significant*, *mainly*, or *predominantly*, interpretated at the discretion of companies rather than users](images/wagner_fig.svg){#fig-wagner fig-align="center"}

## $\Rightarrow$ Model Social / Historical Processes as "Chain" of Counterfactuals! {.smaller .title-12 .cols-va}

&nbsp;

:::: {.columns}
::: {.column width="50%"}

![From @bind2019causal](images/heart_dag_crop.svg){fig-align="center"}

:::
::: {.column width="50%"}

![From @acharya2023slavery](images/sen_dag2.svg){fig-align="center"}

:::
::::

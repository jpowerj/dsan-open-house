{"title":"A Whirlwind Tour of 'Applied' Electives","markdown":{"yaml":{"title":"A Whirlwind Tour of 'Applied' Electives","subtitle":"Data Science and Analytics (DSAN) at Georgetown University","author":"Jeff Jacobs","institute":"Georgetown University<br /><a href='mailto:jj1088@georgetown.edu'>`jj1088@georgetown.edu`</a>","date":"2024-11-22","date-format":"dddd, D MMMM YYYY","format":{"revealjs":{"output-file":"index.html","include-in-header":{"text":"<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\" integrity=\"sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=\" crossorigin=\"\"/>\n<script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\" integrity=\"sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=\" crossorigin=\"\"></script>\n<script src=\"https://unpkg.com/leaflet.gridlayer.googlemutant@latest/dist/Leaflet.GoogleMutant.js\"></script>\n"},"favicon":"favicon.png","html-math-method":"mathjax","slide-number":true,"scrollable":true,"cache":false,"link-external-icon":true,"link-external-newwindow":true,"css":"styles.css","footer":"DSAN Open House 2024","logo":"images/dsan_twolines.png","bibliography":"DSAN_Open_House.bib","nocite":"@*\n","revealjs-plugins":["simplemenu"],"simplemenu":{"flat":true,"barhtml":{"header":"<div class='menubar'><ul class='menu'></ul></div>"},"scale":0.5}}}},"headingText":"Electives I Teach","containsRefs":true,"markdown":"\n\n\n* DSAN 5500: Data Structures, Algorithms, and Objects in Python\n* DSAN 5450: Data Ethics and Policy\n* DSAN 6750: GIS for Spatial Data Science\n* DSAN 6850: Causal Inference for Computational Social Science\n\n# DSAN 5500: Data Structures, Algorithms, and Objects in Python {data-stack-name=\"Data Structures\"}\n\n* Offered in **Spring**\n\n## Motivation: Efficient Data Storage and Manipulation {.title-10 .smaller .crunch-title .crunch-ul}\n\n* Transferable skills *regardless of* current popular language\n* C \"overtaken\" by Java, Java \"overtaken\" by Python, Python will someday be overtaken\n\n```{python}\n#| label: plot-langs\n#| code-fold: true\n#| fig-align: center\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport plotly.io as pio\npio.renderers.default = \"notebook\"\nlang_df = pd.read_csv(\"assets/gh_issues.csv\")\n# The data for 2022 is essentially useless\nlang_df = lang_df[lang_df['year'] <= 2021].copy()\nlang_df['time'] = lang_df['year'].astype(str) + \"_\" + lang_df['quarter'].astype(str)\nlang_df['prop'] = lang_df['count'] / lang_df.groupby('time')['count'].transform('sum')\nlang_df.head()\n#sns.lineplot(data=lang_df, x='year', y='count', color='name')\n# Keep only most popular languages\nkeep_langs = ['Python','JavaScript','C','C++','C#','Java','Ruby']\npop_df = lang_df[lang_df['name'].isin(keep_langs)].copy()\nfig = px.line(pop_df,\n  x='time', y='prop', color='name',\n  template='simple_white', title='Programming Language Popularity Since 2012 (GitHub)',\n  labels = {\n    'time': 'Year',\n    'prop': 'Proportion of GitHub Issues'\n  }\n)\nfig.update_layout(\n  xaxis = dict(\n    tickmode = 'array',\n    tickvals = [f\"{year}_1\" for year in range(2012,2022)],\n    ticktext = [f\"{year}\" for year in range(2012,2022)]\n  )\n)\nfig.show()\n```\n\n## W4: Linear vs. Logarithmic Structures {.smaller .crunch-title .crunch-img .crunch-quarto-figure .crunch-table}\n\n```{=html}\n<table style=\"table-layout: fixed; width: 100% !important;\">\n<thead>\n<tr>\n  <th style=\"width: 25% !important;\"></th>\n  <th style=\"width: 30% !important;\"><span data-qmd=\"Linear Things: $O(N)$\"></span></th>\n  <th style=\"width: 45% !important;\"><span data-qmd=\"Logarithmic Things: $O(\\lg{N})$\"></span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td style=\"width: 25% !important;\"><span data-qmd=\"**Data Structures**\"></span></td>\n  <td><div data-qmd=\"`LinkedList`\n  \n![](images/linked_list.svg){width=270}\"></div></td>\n  <td><div data-qmd=\"`BinarySearchTree`\n\n![](images/bst.svg){fig-align=center width=200}\"></div></td>\n</tr>\n<tr>\n  <td style=\"vertical-align: middle !important;\"><span data-qmd=\"**Sorting Algorithms**\"></span></td>\n  <td><span data-qmd=\"[Insertion-Sort]{.alg}\"></span></td>\n  <td><span data-qmd=\"[Merge-Sort]{.alg}\"></span></td>\n</tr>\n<tr>\n  <td style=\"vertical-align: middle !important;\"><span data-qmd=\"**Search Algorithms**\"></span></td>\n  <td><span data-qmd=\"[Linear-Search]{.alg}\"></span></td>\n  <td><span data-qmd=\"[Binary-Search]{.alg}\"></span></td>\n</tr>\n<tr>\n  <td><span data-qmd=\"**General Pattern**\"></span></td>\n  <td>One-by-One</td>\n  <td>Divide-and-Conquer</td>\n</tr>\n<tr>\n  <td><span data-qmd=\"**Steps to Look Up a Word**\"></span></td>\n  <td><span data-qmd=\"$N = 102118$\"></span></td>\n  <td><span data-qmd=\"$\\lceil \\log_2(N) \\rceil = 17$\"></span></td>\n</tr>\n</tbody>\n</table>\n```\n\n* **Hash Table**: A \"trick\" that gets us close to $O(1)$, **by pre-allocating lots of memory!**\n\n$$\nO(N) \\; \\underbrace{\\leadsto O(\\log_2(N))}_{\\mathclap{\\substack{\\text{More Efficient Algorithm} \\\\ \\text{(Free!)}}}} \\; \\underbrace{\\leadsto O(1 + \\epsilon\\log_2(N))}_{\\substack{\\text{More Memory} \\\\ \\text{(\\$\\$\\$)}}}\n$$\n\n## W11: Functional Programming for *Debuggable* ETL Pipelines {.crunch-title .title-06 .crunch-ul .crunch-p .code-90}\n\n<!-- * Imperative (\"standard\") programming: Code runs line-by-line, from top to bottom -->\n* Run code, check output... it's wrong üòµ what do you do?\n* Usual approach: Read lines one-by-one, figuring out what they do, seeing if something **pops out** that seems wrong; adding comments like `# Convert to lowercase`{.python}\n\n```{dot}\n//| echo: false\n//| fig-height: 1\ndigraph G {\n  rankdir=\"TB\";\n\tedge [\n    penwidth=1.2\n    arrowsize=0.85\n  ];\n  node [\n    fontname=\"Courier\"\n    shape=\"plaintext\"\n  ];\n  input[shape=\"plaintext\", label=\"in.txt\"];\n  load_text[label=<\n<table border=\"1\" cellborder=\"0\">\n<tr>\n  <td><font point-size=\"16\">load_text</font></td>\n</tr>\n<tr>\n  <td><font face=\"Arial\" point-size=\"12\">(Verb)</font></td>\n</tr>\n</table>\n  >];\n  lowercase[label=<\n<table border=\"1\" cellborder=\"0\">\n<tr>\n  <td><font point-size=\"16\">lowercase</font></td>\n</tr>\n<tr>\n  <td><font face=\"Arial\" point-size=\"12\">(Verb)</font></td>\n</tr>\n</table>\n  >];\n  remove_punct[label=<\n<table border=\"1\" cellborder=\"0\">\n<tr>\n  <td><font point-size=\"16\">remove_punct</font></td>\n</tr>\n<tr>\n  <td><font face=\"Arial\" point-size=\"12\">(Verb)</font></td>\n</tr>\n</table>\n  >];\n  remove_stopwords[label=<\n<table border=\"1\" cellborder=\"0\">\n<tr>\n  <td><font point-size=\"16\">remove_stopwords</font></td>\n</tr>\n<tr>\n  <td><font face=\"Arial\" point-size=\"12\">(Verb)</font></td>\n</tr>\n</table>\n  >];\n  output[shape=\"plaintext\", label=\"out.txt\"];\n\n  {\n    rank=same;\n    input -> load_text;\n    load_text -> lowercase[label=\"üßê ‚úÖ\"];\n    lowercase -> remove_punct[label=\"üßê ‚úÖ\"];\n    remove_punct -> remove_stopwords[label=\"üßê ‚ùå‚ùóÔ∏è\"];\n    remove_stopwords -> output;\n  }\n}\n```\n\n* **With** side effects: ‚ùå $\\Rightarrow$ issue *somewhere* in the chain üò©üèÉ‚Äç‚ôÇÔ∏è\n* **No** side effects: ‚ùå $\\Rightarrow$ issue **must be in `remove_punct()`!** üòé <i class='bi bi-arrow-down'></i>‚è±Ô∏è = <i class='bi bi-arrow-up'></i>üí∞\n\n# DSAN 5450: Data Ethics and Policy {data-stack-name=\"Data Ethics\"}\n\n* Offered in **Spring**\n\n## Data Science for Who(m)?\n\n* What are the processes by which data is **measured**, **recorded**, and **distributed**?\n\n![The <a href='https://github.com/MimiOnuoha/missing-datasets' target='_blank'>Library of Missing Datasets</a>. From @dignazio_data_2020](images/missing-datasets.jpg){fig-align=\"center\"}\n\n## Encoding Existing Biases {.smaller .crunch-title .crunch-img}\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n![From @schiebinger_machine_2020](images/pronouns.jpg){fig-align=\"center\" width=\"75%\"}\n\n:::\n::: {.column width=\"50%\"}\n\n![From [Google Translate](https://translate.google.com/?sl=en&tl=de&text=A%20nurse%0AA%20defendant&op=translate) (22 Nov 2024)](images/translation.jpg){fig-align=\"center\"}\n\n:::\n::::\n\n::: {#fig-chatgpt-gender .text-90}\n\n| Prompt | Result |\n| - | - |\n| \"Generate a reference letter for **Kelly**, a 22 year old **female** student at UCLA\" | \"She is an engaged **participant** in group projects, demonstrating exceptional teamwork and collaboration skills [...] a **well-liked member** of our community.\" |\n| \"Generate a reference letter for **Joseph**, a 22 year old **male** student at UCLA\" | His enthusiasm and dedication have had a positive impact on those around him, making him a natural **leader** and **role model** for his peers.\" |\n\n: {tbl-colwidths=\"[35,65]\"}\n\n@wan_kelly_2023, \"Gender Biases in LLM-Generated Reference Letters\"\n:::\n\n## Fairness $\\neq$ Excluding Race/Gender {.smaller .crunch-title}\n\n* In fact (because of **correlations**) can *prevent* reduction of racial disparities\n* *Bloomberg* analysis of **neighborhoods with same-day delivery** from Amazon... \n\n::: {#fig-amazon}\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n![](images/dc-big-inset.png){fig-align=\"center\"}\n\n:::\n::: {.column width=\"50%\"}\n\n![](images/dc-big-chart.png){fig-align=\"center\"}\n\n:::\n::::\n\nFigures from @ingold_amazon_2016, \"Amazon Doesn't Consider the Race of its Customers. Should It?\"\n:::\n\n## Data Protection Regimes\n\n![From PIWIK, [*Privacy Policies Around the Globe*](https://piwik.pro/privacy-laws-around-globe/) (2023)](images/piwik.jpeg){#fig-policies fig-align=\"center\"}\n\n## Does Reading = Understanding? {.smaller .crunch-title .crunch-ul}\n\n* Does reading $\\implies$ understanding **implications** / **contingencies** / **ambiguities**?\n* NLP can help: *\"making privacy policies **machine readable** [...] would help users match **privacy preferences** against **policies** offered by web services\"* [@wagner_privacy_2023]\n\n![From @wagner_privacy_2023. \"Obfuscatory words\" are words like *acceptable*, *significant*, *mainly*, or *predominantly*, interpretated at the discretion of companies rather than users](images/wagner_fig.svg){#fig-wagner fig-align=\"center\"}\n\n# DSAN 6750: GIS for Spatial Data Science {data-stack-name=\"GIS\"}\n\n* Offered in **Fall**\n* **Classical** (i.i.d.) Statistics $\\rightarrow$ **Spatial** Statistics (need to account for **autocorrelation**)\n\n\n## Diffusion Processes\n\n```{r}\n#| label: plot-neighbors\n# Libraries\nlibrary(sf) |> suppressPackageStartupMessages()\nlibrary(spdep) |> suppressPackageStartupMessages()\nlibrary(rnaturalearth) |> suppressPackageStartupMessages()\nlibrary(mapview) |> suppressPackageStartupMessages()\nlibrary(htmlwidgets)\n# Download data\nasia_sf <- ne_countries(continent = \"Asia\", scale=50)\n# Compute neighborhood matrix\nasia_nb <- asia_sf |> spdep::poly2nb(queen = TRUE, row.names=asia_sf$geounit)\n# Compute Centroids\nnb_cents <- sf::st_as_sf(sf::st_point_on_surface(asia_sf))\n# Construct lines between each neighboring POLYGON\nnb_lines <- spdep::nb2lines(\n    asia_nb, coords=st_coordinates(nb_cents), as_sf=TRUE\n)\nnb_lines$edgelabel <- paste0(nb_lines$i_ID, \"-\", nb_lines$j_ID)\n# And plot\nmapview(nb_cents, label=\"geounit\") + mapview(nb_lines, label=\"edgelabel\")\n```\n\n## Spatial Regression\n\n```{r}\nit_plot <- readRDS(\"assets/it_plot.rds\")\nit_plot\n```\n\n## We Hope You Join Us! üòä {data-sm=\"false\"}\n\n**References**\n\n::: {#refs}\n:::\n","srcMarkdownNoYaml":"\n\n# Electives I Teach\n\n* DSAN 5500: Data Structures, Algorithms, and Objects in Python\n* DSAN 5450: Data Ethics and Policy\n* DSAN 6750: GIS for Spatial Data Science\n* DSAN 6850: Causal Inference for Computational Social Science\n\n# DSAN 5500: Data Structures, Algorithms, and Objects in Python {data-stack-name=\"Data Structures\"}\n\n* Offered in **Spring**\n\n## Motivation: Efficient Data Storage and Manipulation {.title-10 .smaller .crunch-title .crunch-ul}\n\n* Transferable skills *regardless of* current popular language\n* C \"overtaken\" by Java, Java \"overtaken\" by Python, Python will someday be overtaken\n\n```{python}\n#| label: plot-langs\n#| code-fold: true\n#| fig-align: center\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport plotly.io as pio\npio.renderers.default = \"notebook\"\nlang_df = pd.read_csv(\"assets/gh_issues.csv\")\n# The data for 2022 is essentially useless\nlang_df = lang_df[lang_df['year'] <= 2021].copy()\nlang_df['time'] = lang_df['year'].astype(str) + \"_\" + lang_df['quarter'].astype(str)\nlang_df['prop'] = lang_df['count'] / lang_df.groupby('time')['count'].transform('sum')\nlang_df.head()\n#sns.lineplot(data=lang_df, x='year', y='count', color='name')\n# Keep only most popular languages\nkeep_langs = ['Python','JavaScript','C','C++','C#','Java','Ruby']\npop_df = lang_df[lang_df['name'].isin(keep_langs)].copy()\nfig = px.line(pop_df,\n  x='time', y='prop', color='name',\n  template='simple_white', title='Programming Language Popularity Since 2012 (GitHub)',\n  labels = {\n    'time': 'Year',\n    'prop': 'Proportion of GitHub Issues'\n  }\n)\nfig.update_layout(\n  xaxis = dict(\n    tickmode = 'array',\n    tickvals = [f\"{year}_1\" for year in range(2012,2022)],\n    ticktext = [f\"{year}\" for year in range(2012,2022)]\n  )\n)\nfig.show()\n```\n\n## W4: Linear vs. Logarithmic Structures {.smaller .crunch-title .crunch-img .crunch-quarto-figure .crunch-table}\n\n```{=html}\n<table style=\"table-layout: fixed; width: 100% !important;\">\n<thead>\n<tr>\n  <th style=\"width: 25% !important;\"></th>\n  <th style=\"width: 30% !important;\"><span data-qmd=\"Linear Things: $O(N)$\"></span></th>\n  <th style=\"width: 45% !important;\"><span data-qmd=\"Logarithmic Things: $O(\\lg{N})$\"></span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td style=\"width: 25% !important;\"><span data-qmd=\"**Data Structures**\"></span></td>\n  <td><div data-qmd=\"`LinkedList`\n  \n![](images/linked_list.svg){width=270}\"></div></td>\n  <td><div data-qmd=\"`BinarySearchTree`\n\n![](images/bst.svg){fig-align=center width=200}\"></div></td>\n</tr>\n<tr>\n  <td style=\"vertical-align: middle !important;\"><span data-qmd=\"**Sorting Algorithms**\"></span></td>\n  <td><span data-qmd=\"[Insertion-Sort]{.alg}\"></span></td>\n  <td><span data-qmd=\"[Merge-Sort]{.alg}\"></span></td>\n</tr>\n<tr>\n  <td style=\"vertical-align: middle !important;\"><span data-qmd=\"**Search Algorithms**\"></span></td>\n  <td><span data-qmd=\"[Linear-Search]{.alg}\"></span></td>\n  <td><span data-qmd=\"[Binary-Search]{.alg}\"></span></td>\n</tr>\n<tr>\n  <td><span data-qmd=\"**General Pattern**\"></span></td>\n  <td>One-by-One</td>\n  <td>Divide-and-Conquer</td>\n</tr>\n<tr>\n  <td><span data-qmd=\"**Steps to Look Up a Word**\"></span></td>\n  <td><span data-qmd=\"$N = 102118$\"></span></td>\n  <td><span data-qmd=\"$\\lceil \\log_2(N) \\rceil = 17$\"></span></td>\n</tr>\n</tbody>\n</table>\n```\n\n* **Hash Table**: A \"trick\" that gets us close to $O(1)$, **by pre-allocating lots of memory!**\n\n$$\nO(N) \\; \\underbrace{\\leadsto O(\\log_2(N))}_{\\mathclap{\\substack{\\text{More Efficient Algorithm} \\\\ \\text{(Free!)}}}} \\; \\underbrace{\\leadsto O(1 + \\epsilon\\log_2(N))}_{\\substack{\\text{More Memory} \\\\ \\text{(\\$\\$\\$)}}}\n$$\n\n## W11: Functional Programming for *Debuggable* ETL Pipelines {.crunch-title .title-06 .crunch-ul .crunch-p .code-90}\n\n<!-- * Imperative (\"standard\") programming: Code runs line-by-line, from top to bottom -->\n* Run code, check output... it's wrong üòµ what do you do?\n* Usual approach: Read lines one-by-one, figuring out what they do, seeing if something **pops out** that seems wrong; adding comments like `# Convert to lowercase`{.python}\n\n```{dot}\n//| echo: false\n//| fig-height: 1\ndigraph G {\n  rankdir=\"TB\";\n\tedge [\n    penwidth=1.2\n    arrowsize=0.85\n  ];\n  node [\n    fontname=\"Courier\"\n    shape=\"plaintext\"\n  ];\n  input[shape=\"plaintext\", label=\"in.txt\"];\n  load_text[label=<\n<table border=\"1\" cellborder=\"0\">\n<tr>\n  <td><font point-size=\"16\">load_text</font></td>\n</tr>\n<tr>\n  <td><font face=\"Arial\" point-size=\"12\">(Verb)</font></td>\n</tr>\n</table>\n  >];\n  lowercase[label=<\n<table border=\"1\" cellborder=\"0\">\n<tr>\n  <td><font point-size=\"16\">lowercase</font></td>\n</tr>\n<tr>\n  <td><font face=\"Arial\" point-size=\"12\">(Verb)</font></td>\n</tr>\n</table>\n  >];\n  remove_punct[label=<\n<table border=\"1\" cellborder=\"0\">\n<tr>\n  <td><font point-size=\"16\">remove_punct</font></td>\n</tr>\n<tr>\n  <td><font face=\"Arial\" point-size=\"12\">(Verb)</font></td>\n</tr>\n</table>\n  >];\n  remove_stopwords[label=<\n<table border=\"1\" cellborder=\"0\">\n<tr>\n  <td><font point-size=\"16\">remove_stopwords</font></td>\n</tr>\n<tr>\n  <td><font face=\"Arial\" point-size=\"12\">(Verb)</font></td>\n</tr>\n</table>\n  >];\n  output[shape=\"plaintext\", label=\"out.txt\"];\n\n  {\n    rank=same;\n    input -> load_text;\n    load_text -> lowercase[label=\"üßê ‚úÖ\"];\n    lowercase -> remove_punct[label=\"üßê ‚úÖ\"];\n    remove_punct -> remove_stopwords[label=\"üßê ‚ùå‚ùóÔ∏è\"];\n    remove_stopwords -> output;\n  }\n}\n```\n\n* **With** side effects: ‚ùå $\\Rightarrow$ issue *somewhere* in the chain üò©üèÉ‚Äç‚ôÇÔ∏è\n* **No** side effects: ‚ùå $\\Rightarrow$ issue **must be in `remove_punct()`!** üòé <i class='bi bi-arrow-down'></i>‚è±Ô∏è = <i class='bi bi-arrow-up'></i>üí∞\n\n# DSAN 5450: Data Ethics and Policy {data-stack-name=\"Data Ethics\"}\n\n* Offered in **Spring**\n\n## Data Science for Who(m)?\n\n* What are the processes by which data is **measured**, **recorded**, and **distributed**?\n\n![The <a href='https://github.com/MimiOnuoha/missing-datasets' target='_blank'>Library of Missing Datasets</a>. From @dignazio_data_2020](images/missing-datasets.jpg){fig-align=\"center\"}\n\n## Encoding Existing Biases {.smaller .crunch-title .crunch-img}\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n![From @schiebinger_machine_2020](images/pronouns.jpg){fig-align=\"center\" width=\"75%\"}\n\n:::\n::: {.column width=\"50%\"}\n\n![From [Google Translate](https://translate.google.com/?sl=en&tl=de&text=A%20nurse%0AA%20defendant&op=translate) (22 Nov 2024)](images/translation.jpg){fig-align=\"center\"}\n\n:::\n::::\n\n::: {#fig-chatgpt-gender .text-90}\n\n| Prompt | Result |\n| - | - |\n| \"Generate a reference letter for **Kelly**, a 22 year old **female** student at UCLA\" | \"She is an engaged **participant** in group projects, demonstrating exceptional teamwork and collaboration skills [...] a **well-liked member** of our community.\" |\n| \"Generate a reference letter for **Joseph**, a 22 year old **male** student at UCLA\" | His enthusiasm and dedication have had a positive impact on those around him, making him a natural **leader** and **role model** for his peers.\" |\n\n: {tbl-colwidths=\"[35,65]\"}\n\n@wan_kelly_2023, \"Gender Biases in LLM-Generated Reference Letters\"\n:::\n\n## Fairness $\\neq$ Excluding Race/Gender {.smaller .crunch-title}\n\n* In fact (because of **correlations**) can *prevent* reduction of racial disparities\n* *Bloomberg* analysis of **neighborhoods with same-day delivery** from Amazon... \n\n::: {#fig-amazon}\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n![](images/dc-big-inset.png){fig-align=\"center\"}\n\n:::\n::: {.column width=\"50%\"}\n\n![](images/dc-big-chart.png){fig-align=\"center\"}\n\n:::\n::::\n\nFigures from @ingold_amazon_2016, \"Amazon Doesn't Consider the Race of its Customers. Should It?\"\n:::\n\n## Data Protection Regimes\n\n![From PIWIK, [*Privacy Policies Around the Globe*](https://piwik.pro/privacy-laws-around-globe/) (2023)](images/piwik.jpeg){#fig-policies fig-align=\"center\"}\n\n## Does Reading = Understanding? {.smaller .crunch-title .crunch-ul}\n\n* Does reading $\\implies$ understanding **implications** / **contingencies** / **ambiguities**?\n* NLP can help: *\"making privacy policies **machine readable** [...] would help users match **privacy preferences** against **policies** offered by web services\"* [@wagner_privacy_2023]\n\n![From @wagner_privacy_2023. \"Obfuscatory words\" are words like *acceptable*, *significant*, *mainly*, or *predominantly*, interpretated at the discretion of companies rather than users](images/wagner_fig.svg){#fig-wagner fig-align=\"center\"}\n\n# DSAN 6750: GIS for Spatial Data Science {data-stack-name=\"GIS\"}\n\n* Offered in **Fall**\n* **Classical** (i.i.d.) Statistics $\\rightarrow$ **Spatial** Statistics (need to account for **autocorrelation**)\n\n\n## Diffusion Processes\n\n```{r}\n#| label: plot-neighbors\n# Libraries\nlibrary(sf) |> suppressPackageStartupMessages()\nlibrary(spdep) |> suppressPackageStartupMessages()\nlibrary(rnaturalearth) |> suppressPackageStartupMessages()\nlibrary(mapview) |> suppressPackageStartupMessages()\nlibrary(htmlwidgets)\n# Download data\nasia_sf <- ne_countries(continent = \"Asia\", scale=50)\n# Compute neighborhood matrix\nasia_nb <- asia_sf |> spdep::poly2nb(queen = TRUE, row.names=asia_sf$geounit)\n# Compute Centroids\nnb_cents <- sf::st_as_sf(sf::st_point_on_surface(asia_sf))\n# Construct lines between each neighboring POLYGON\nnb_lines <- spdep::nb2lines(\n    asia_nb, coords=st_coordinates(nb_cents), as_sf=TRUE\n)\nnb_lines$edgelabel <- paste0(nb_lines$i_ID, \"-\", nb_lines$j_ID)\n# And plot\nmapview(nb_cents, label=\"geounit\") + mapview(nb_lines, label=\"edgelabel\")\n```\n\n## Spatial Regression\n\n```{r}\nit_plot <- readRDS(\"assets/it_plot.rds\")\nit_plot\n```\n\n## We Hope You Join Us! üòä {data-sm=\"false\"}\n\n**References**\n\n::: {#refs}\n:::\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":false,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":true,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":"mathjax","slide-level":2,"to":"revealjs","output-file":"index.html","include-in-header":{"text":"<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\" integrity=\"sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=\" crossorigin=\"\"/>\n<script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\" integrity=\"sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=\" crossorigin=\"\"></script>\n<script src=\"https://unpkg.com/leaflet.gridlayer.googlemutant@latest/dist/Leaflet.GoogleMutant.js\"></script>\n"},"css":["styles.css"]},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.5.57","auto-stretch":true,"title":"A Whirlwind Tour of 'Applied' Electives","subtitle":"Data Science and Analytics (DSAN) at Georgetown University","author":"Jeff Jacobs","institute":"Georgetown University<br /><a href='mailto:jj1088@georgetown.edu'>`jj1088@georgetown.edu`</a>","date":"2024-11-22","date-format":"dddd, D MMMM YYYY","favicon":"favicon.png","slideNumber":true,"scrollable":true,"footer":"DSAN Open House 2024","logo":"images/dsan_twolines.png","bibliography":["DSAN_Open_House.bib"],"nocite":"@*\n","revealjs-plugins":["simplemenu"],"simplemenu":{"flat":true,"barhtml":{"header":"<div class='menubar'><ul class='menu'></ul></div>"},"scale":0.5}}}},"projectFormats":["html"]}